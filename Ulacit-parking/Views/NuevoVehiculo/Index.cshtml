@model List<Ulacit_parking.Models.ViewModels.VehicleViewModel>

@{
    ViewBag.Title = "Vehículos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Html.AntiForgeryToken()
<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2>Vehículos</h2>
        <a class="btn btn-success" href="@Url.Action("Create", "NuevoVehiculo")">
            <i class="fas fa-plus"></i> Añadir Vehículo
        </a>
    </div>

    <input type="text" class="form-control mb-3" placeholder="Buscar por placa, marca o dueño..." onkeyup="filtrarVehiculos(this.value)" />

    <table class="table table-bordered table-hover" id="vehiculosTable">
        <thead class="table-dark">
            <tr>
                <th>Dueño</th>
                <th>Placa</th>
                <th>Marca</th>
                <th>Color</th>
                <th>Tipo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehiculo in Model)
            {
                <tr>
                    <td>@vehiculo.OwnerName</td>
                    <td>@vehiculo.LicensePlate</td>
                    <td>@vehiculo.Brand</td>
                    <td>@vehiculo.Color</td>
                    <td>@vehiculo.VehicleType</td>
                    <td>
                        <a href="@Url.Action("Editar", "NuevoVehiculo", new { id = vehiculo.Id })" class="btn btn-sm btn-primary me-1" title="Editar">
                            <!-- falta editar en el controlador y vista -->
                            <i class="fas fa-pen"></i>
                        </a>
                        <button class="btn btn-sm btn-danger" title="Eliminar" onclick="eliminarVehiculo(@vehiculo.Id)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function filtrarVehiculos(valor) {
        const rows = document.querySelectorAll("#vehiculosTable tbody tr");
        valor = valor.toLowerCase();
        rows.forEach(row => {
            const texto = row.textContent.toLowerCase();
            row.style.display = texto.includes(valor) ? "" : "none";
        });
    }

    function eliminarVehiculo(id) {
        if (!confirm("¿Está seguro que desea eliminar este vehículo?")) return;

        fetch('@Url.Action("EliminarVehiculo", "NuevoVehiculo")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': getAntiForgeryToken()
            },
            body: JSON.stringify({ id: id })
        })
        .then(response => response.json())
        .then(data => {
            alert(data.message);
            if (data.success) {
                location.reload();
            }
        })
        .catch(() => alert("Error al procesar la solicitud."));
    }

    function getAntiForgeryToken() {
        const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenInput ? tokenInput.value : '';
    }
</script>
